stages:
  - build
#   - deploy

# https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
build-angular-client:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/docker/site.dockerfile"
      --destination "${CI_REGISTRY_IMAGE}-angular-client-site:latest"
    #   --destination "${CI_REGISTRY_IMAGE}-angular-client-site:${CI_COMMIT_TAG}"
#   rules:
#     - if: $CI_COMMIT_TAG =~ /v-/

build-net-core:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/docker/api.dockerfile"
      --destination "${CI_REGISTRY_IMAGE}-vvvvid-downloader-api:latest"
    #   --destination "${CI_REGISTRY_IMAGE}-vvvvid-downloader-api:${CI_COMMIT_TAG}"
#   rules:
#     - if: $CI_COMMIT_TAG =~ /v-/

# deploy:
#   stage: deploy
#   image: debian
#   variables:
#     SERVER: "$DEV_SERVER"
#     USER: "$DEV_USER"
#     PASSWORD: "$DEV_PASSWORD"
#   before_script:
#     - echo "install utils"
#     - apt-get update -qy
#     - apt-get install -y lftp sshpass openssh-client
#     - echo "SSH add trust host"
#     - mkdir -p ~/.ssh
#     - chmod 700 ~/.ssh
#     - ssh-keyscan -H $SERVER >> ~/.ssh/known_hosts
#     - chmod 644 ~/.ssh/known_hosts
#     - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
#     - echo "LFTP fix trust host"
#     - mkdir ~/.lftp
#     - echo "set ssl:verify-certificate no" >> ~/.lftp/rc
#   script:
#     - echo "update docker image"
#     - sshpass -p $PASSWORD ssh $USER@$SERVER docker pull registry.gitlab.com/christiancapp/quickapptemplate:latest
#     - echo "create gitlab temp directory..."
#     - echo "copy docker-compose files into gitlab temp directory..."
#     - >-
#       lftp -e "set ftp:ssl-protect-data true ;
#       rmdir /temp-gitlab/quickapptemplate ;
#       mkdir /temp-gitlab/quickapptemplate ;
#       put -O /temp-gitlab/quickapptemplate ${CI_PROJECT_DIR}/docker/docker-compose.prod.yml ;
#       exit"
#       -u $USER,$PASSWORD sftp://$SERVER
#     - echo "update docker container"
#     - sshpass -p $PASSWORD ssh $USER@$SERVER docker-compose --file /temp-gitlab/quickapptemplate/docker-compose.prod.yml --project-name quickapp-prod up -d
#     - echo "clean temp directory"
#     - sshpass -p $PASSWORD ssh $USER@$SERVER rm -R /temp-gitlab/quickapptemplate
#     - echo "info container"
#     - sshpass -p $PASSWORD ssh $USER@$SERVER docker inspect quickapp-api
#   rules:
#     - if: $CI_COMMIT_TAG =~ /v-/